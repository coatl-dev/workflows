on:
  workflow_call:
    inputs:
      python-versions:
        description: A list of Python versions.
        required: true
        type: string

jobs:
  tox:
    name: tox-${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJSON(inputs.python-versions) }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python
        id: cache-python
        uses: actions/cache@v4
        with:
          path: ${{ steps.setup-python.outputs.python-path }}
          key: py-${{ steps.setup-python.outputs.python-version }}-${{ runner.os }}

      - name: Upgrade pre-installed dependencies
        run: |
          python -m pip install --upgrade \
            pip \
            setuptools \
            wheel

      - name: Install dependencies
        run: |
          python -m pip install --upgrade tox

      - name: Pick environment to run
        run: |
          import codecs; import os; import sys
          env = "TOXENV=py{}{}\n".format(*sys.version_info[:2])
          print(f"Picked:\n{env}for {sys.version}")
          with codecs.open(os.environ["GITHUB_ENV"], "a", "utf-8") as file_handler:
              file_handler.write(env)
        shell: python

      - name: Cache tox
        id: cache-tox
        uses: actions/cache@v4
        with:
          path: .tox
          key: tox-envs-${{ steps.setup-python.outputs.python-version }}-${{ runner.os }}-${{ hashFiles('tox.ini') }}

      - name: Run tox
        run: |
          tox
