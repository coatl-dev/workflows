on:
  workflow_call:
    inputs:
      cache:
        description: Whether to enable caching.
        required: false
        type: boolean
        default: true
      image:
        description: The type of machine to run the job on.
        required: false
        type: string
        default: ubuntu-latest
      python-version:
        description: Version of Python to use.
        required: false
        type: string
        default: '3.11'
      check:
        description: Check metadata with twine before uploading.
        required: false
        type: boolean
        default: true
      url:
        description: >-
          The repository (package index) URL to upload the package to.
        required: false
        type: string
        default: https://upload.pypi.org/legacy/
      username:
        description: >-
          The username to authenticate to the repository (package index) as.
        required: false
        type: string
        default: __token__
      timeout:
        description: >-
          The maximum number of minutes to let a job run before GitHub
          automatically cancels it.
        required: false
        type: number
        default: 15
    secrets:
      password:
        description: >-
          The password to authenticate to the repository (package index) with.
        required: true

jobs:
  upload:
    runs-on: ${{ inputs.image }}
    timeout-minutes: ${{ inputs.timeout }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: ${{ inputs.python-version }}

      - name: Cache pip
        if: ${{ inputs.cache == true }}
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-pypi-${{ steps.setup-python.outputs.python-version }}-${{ inputs.image }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade \
            pip \
            setuptools \
            wheel \
            build \
            twine

      - name: Build package
        run: |
          python -m build

      - name: Check package with Twine
        if: ${{ inputs.check }}
        run: |
          python -m twine check dist/*

      - name: Upload to PyPI via Twine
        env:
          TWINE_USERNAME: ${{ inputs.username }}
          TWINE_PASSWORD: ${{ secrets.password }}
          TWINE_REPOSITORY_URL: ${{ inputs.url }}
        run: |
          python -m twine upload --verbose dist/*
